#!/usr/bin/env python
#
# Tests for image block commit.
#
# Copyright (C) 2012 IBM, Corp.
# Copyright (C) 2012 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Test for live block commit
# Derived from Image Streaming Test 030

import time
import os
import iotests
from iotests import qemu_img, qemu_io
import datetime
import struct
import errno

test_img = os.path.join(iotests.test_dir, 'test.img')

class ThrottleTestCase(iotests.QMPTestCase):
    image_len = 80 * 1024 * 1024 # MB

    def blockstats(self, device):
        result = self.vm.qmp("query-blockstats")
        for r in result['return']:
            if r['device'] == device:
                stat = r['stats']
                return stat['rd_bytes'], stat['rd_operations'], stat['wr_bytes'], stat['wr_operations']
        raise Exception("Device not found for blockstats: %s" % device)

    def setUp(self):
        qemu_img('create', '-f', iotests.imgfmt, test_img, "1G")
        self.vm = iotests.VM().add_drive(test_img, "bps=102400,bps_max=1")
        self.vm.launch()

    def tearDown(self):
        self.vm.shutdown()
        os.remove(test_img)

    def test_throttle(self):

        # Enqueue many requests to throttling queue
        for i in range(2):
            print self.vm.hmp_qemu_io("drive0", "aio_read -aq 0 10M")
            print datetime.datetime.now()

        print "querying..."
        for i in range(10):
            print datetime.datetime.now()
            print self.blockstats("drive0")
            time.sleep(1)
        self.vm.shutdown()

if __name__ == '__main__':
    iotests.main()
